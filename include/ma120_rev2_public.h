/*---------------------------------------------------------------------------------------*/
/*   Merus Audio MA120   register map                                                    */
/*                                                                                       */
/*   Provides : Defines for registers and symbols in merus audio amplifiers              */
/*              Macros for set and get content of symbols                                */
/*              Read-modify-write on write to symbols less then 8 bits                   */
/*                                                                                       */
/*   Symbols is a collection of 1 to 8 bits within a single address                      */
/*                                                                                       */
/*   Provided as is - free to use and share                                              */
/*                                                                                       */
/*   Timestamp                        :                         Fri Sep  4 13:23:45 2020 */
/*   Created from database            :                                       ma120_rev2 */
/*   Errors and updates please contact:       Jorgen Kragh Jakobsen, jkj@merus-audio.com */
/*---------------------------------------------------------------------------------------*/

#include <stdint.h>


#ifndef _MA120_H_
#define _MA120_H_


//------------------------------------------------------------------------------core__pa__PMP_select---
// Power Mode Profile selection
#define MA_core__pa__PMP_select__a 0x0000
#define MA_core__pa__PMP_select__len 3
#define MA_core__pa__PMP_select__mask 0x07
#define MA_core__pa__PMP_select__shift 0x00
#define MA_core__pa__PMP_select__reset 0x02
#define MA_core__pa__PMP_select__inputonly 0
//------------------------------------------------------------------------------core__pa__mode_pbtl---
// High to use PBTL mode
#define MA_core__pa__mode_pbtl__a 0x0000
#define MA_core__pa__mode_pbtl__len 1
#define MA_core__pa__mode_pbtl__mask 0x08
#define MA_core__pa__mode_pbtl__shift 0x03
#define MA_core__pa__mode_pbtl__reset 0x00
#define MA_core__pa__mode_pbtl__inputonly 0
//------------------------------------------------------------------------------core__pa__pvdd_scale---
// Pvdd level config. for DNR optimization.
#define MA_core__pa__pvdd_scale__a 0x0000
#define MA_core__pa__pvdd_scale__len 2
#define MA_core__pa__pvdd_scale__mask 0x30
#define MA_core__pa__pvdd_scale__shift 0x04
#define MA_core__pa__pvdd_scale__reset 0x03
#define MA_core__pa__pvdd_scale__inputonly 0
//------------------------------------------------------------------------------core__pa__TBD_reg_ctrl---
// High: override pin programmed settings with register stettings<br>
#define MA_core__pa__TBD_reg_ctrl__a 0x0000
#define MA_core__pa__TBD_reg_ctrl__len 1
#define MA_core__pa__TBD_reg_ctrl__mask 0x40
#define MA_core__pa__TBD_reg_ctrl__shift 0x06
#define MA_core__pa__TBD_reg_ctrl__reset 0x00
#define MA_core__pa__TBD_reg_ctrl__inputonly 0
//------------------------------------------------------------------------------core__pa__gd_dVdt---
// Gate driver dV/dt (strength) selection. "00" = lowest, "11" = highest<br>
#define MA_core__pa__gd_dVdt__a 0x0001
#define MA_core__pa__gd_dVdt__len 2
#define MA_core__pa__gd_dVdt__mask 0x03
#define MA_core__pa__gd_dVdt__shift 0x00
#define MA_core__pa__gd_dVdt__reset 0x03
#define MA_core__pa__gd_dVdt__inputonly 0
//------------------------------------------------------------------------------core__pa__mute_ch0---
// High to force channel 0 to mute
#define MA_core__pa__mute_ch0__a 0x0002
#define MA_core__pa__mute_ch0__len 1
#define MA_core__pa__mute_ch0__mask 0x01
#define MA_core__pa__mute_ch0__shift 0x00
#define MA_core__pa__mute_ch0__reset 0x00
#define MA_core__pa__mute_ch0__inputonly 0
//------------------------------------------------------------------------------core__pa__mute_ch1---
// High to force channel 1 to mute
#define MA_core__pa__mute_ch1__a 0x0002
#define MA_core__pa__mute_ch1__len 1
#define MA_core__pa__mute_ch1__mask 0x02
#define MA_core__pa__mute_ch1__shift 0x01
#define MA_core__pa__mute_ch1__reset 0x00
#define MA_core__pa__mute_ch1__inputonly 0
//------------------------------------------------------------------------------core__pa__disable_ch0---
// High to disable channel 0
#define MA_core__pa__disable_ch0__a 0x0002
#define MA_core__pa__disable_ch0__len 1
#define MA_core__pa__disable_ch0__mask 0x04
#define MA_core__pa__disable_ch0__shift 0x02
#define MA_core__pa__disable_ch0__reset 0x00
#define MA_core__pa__disable_ch0__inputonly 0
//------------------------------------------------------------------------------core__pa__disable_ch1---
// High to disable channel 1
#define MA_core__pa__disable_ch1__a 0x0002
#define MA_core__pa__disable_ch1__len 1
#define MA_core__pa__disable_ch1__mask 0x08
#define MA_core__pa__disable_ch1__shift 0x03
#define MA_core__pa__disable_ch1__reset 0x00
#define MA_core__pa__disable_ch1__inputonly 0
//------------------------------------------------------------------------------core__pa__standby---
// High to force chip standby.
#define MA_core__pa__standby__a 0x0002
#define MA_core__pa__standby__len 1
#define MA_core__pa__standby__mask 0x10
#define MA_core__pa__standby__shift 0x04
#define MA_core__pa__standby__reset 0x00
#define MA_core__pa__standby__inputonly 0
//------------------------------------------------------------------------------core__pa__dsp_enable---
// High to enable the digital audio processor
#define MA_core__pa__dsp_enable__a 0x0005
#define MA_core__pa__dsp_enable__len 1
#define MA_core__pa__dsp_enable__mask 0x02
#define MA_core__pa__dsp_enable__shift 0x01
#define MA_core__pa__dsp_enable__reset 0x00
#define MA_core__pa__dsp_enable__inputonly 0
//------------------------------------------------------------------------------core__pa__dsp_restart---
// High: the DSP is halted, Low: the DSP is running
#define MA_core__pa__dsp_restart__a 0x0005
#define MA_core__pa__dsp_restart__len 1
#define MA_core__pa__dsp_restart__mask 0x04
#define MA_core__pa__dsp_restart__shift 0x02
#define MA_core__pa__dsp_restart__reset 0x00
#define MA_core__pa__dsp_restart__inputonly 0
//------------------------------------------------------------------------------core__pa__volume_ch0---
// Channel 0 volume setting
#define MA_core__pa__volume_ch0__a 0x0003
#define MA_core__pa__volume_ch0__len 8
#define MA_core__pa__volume_ch0__mask 0xff
#define MA_core__pa__volume_ch0__shift 0x00
#define MA_core__pa__volume_ch0__reset 0x20
#define MA_core__pa__volume_ch0__inputonly 0
//------------------------------------------------------------------------------core__pa__volume_ch1---
// Channel 1 volume setting
#define MA_core__pa__volume_ch1__a 0x0004
#define MA_core__pa__volume_ch1__len 8
#define MA_core__pa__volume_ch1__mask 0xff
#define MA_core__pa__volume_ch1__shift 0x00
#define MA_core__pa__volume_ch1__reset 0x20
#define MA_core__pa__volume_ch1__inputonly 0
//------------------------------------------------------------------------------core__pa__dsp_bypass---
// High to take audio directly from i2s/tdm input
#define MA_core__pa__dsp_bypass__a 0x0005
#define MA_core__pa__dsp_bypass__len 1
#define MA_core__pa__dsp_bypass__mask 0x08
#define MA_core__pa__dsp_bypass__shift 0x03
#define MA_core__pa__dsp_bypass__reset 0x00
#define MA_core__pa__dsp_bypass__inputonly 0
//------------------------------------------------------------------------------core__pa__vol_instant---
// High: Apply volume settings instantly - without ramp
#define MA_core__pa__vol_instant__a 0x0005
#define MA_core__pa__vol_instant__len 1
#define MA_core__pa__vol_instant__mask 0x01
#define MA_core__pa__vol_instant__shift 0x00
#define MA_core__pa__vol_instant__reset 0x00
#define MA_core__pa__vol_instant__inputonly 0
//------------------------------------------------------------------------------core__pa__clip_pin---
// State of the "clip" signal driving the nClip pin -- "1" means "clip"<br>
#define MA_core__pa__clip_pin__a 0x0006
#define MA_core__pa__clip_pin__len 1
#define MA_core__pa__clip_pin__mask 0x01
#define MA_core__pa__clip_pin__shift 0x00
#define MA_core__pa__clip_pin__reset 0x00
#define MA_core__pa__clip_pin__inputonly 1
//------------------------------------------------------------------------------core__pa__err_pin---
// Status of the "err" signal driving the nErr pin -- "1" means "error"<br>
#define MA_core__pa__err_pin__a 0x0006
#define MA_core__pa__err_pin__len 1
#define MA_core__pa__err_pin__mask 0x02
#define MA_core__pa__err_pin__shift 0x01
#define MA_core__pa__err_pin__reset 0x00
#define MA_core__pa__err_pin__inputonly 1
//------------------------------------------------------------------------------core__pa__temp_chip---
// Current chip temperature reading
#define MA_core__pa__temp_chip__a 0x0008
#define MA_core__pa__temp_chip__len 8
#define MA_core__pa__temp_chip__mask 0xff
#define MA_core__pa__temp_chip__shift 0x00
#define MA_core__pa__temp_chip__reset 0x00
#define MA_core__pa__temp_chip__inputonly 1
//------------------------------------------------------------------------------core__pa__pvdd_chip---
// Current chip Pvdd reading
#define MA_core__pa__pvdd_chip__a 0x0009
#define MA_core__pa__pvdd_chip__len 8
#define MA_core__pa__pvdd_chip__mask 0xff
#define MA_core__pa__pvdd_chip__shift 0x00
#define MA_core__pa__pvdd_chip__reset 0x00
#define MA_core__pa__pvdd_chip__inputonly 1
//------------------------------------------------------------------------------core__pa__attack_ch1---
// Channel 1 attack time for limiter
#define MA_core__pa__attack_ch1__a 0x000b
#define MA_core__pa__attack_ch1__len 5
#define MA_core__pa__attack_ch1__mask 0x1f
#define MA_core__pa__attack_ch1__shift 0x00
#define MA_core__pa__attack_ch1__reset 0x00
#define MA_core__pa__attack_ch1__inputonly 0
//------------------------------------------------------------------------------core__pa__attack_ch0---
// Channel 0 attack time for limiter
#define MA_core__pa__attack_ch0__a 0x000a
#define MA_core__pa__attack_ch0__len 5
#define MA_core__pa__attack_ch0__mask 0x1f
#define MA_core__pa__attack_ch0__shift 0x00
#define MA_core__pa__attack_ch0__reset 0x00
#define MA_core__pa__attack_ch0__inputonly 0
//------------------------------------------------------------------------------core__pa__release_ch0---
// Channel 0 release time for limiter
#define MA_core__pa__release_ch0__a 0x000c
#define MA_core__pa__release_ch0__len 5
#define MA_core__pa__release_ch0__mask 0x1f
#define MA_core__pa__release_ch0__shift 0x00
#define MA_core__pa__release_ch0__reset 0x12
#define MA_core__pa__release_ch0__inputonly 0
//------------------------------------------------------------------------------core__pa__release_ch1---
// Channel 1 release time for limiter
#define MA_core__pa__release_ch1__a 0x000d
#define MA_core__pa__release_ch1__len 5
#define MA_core__pa__release_ch1__mask 0x1f
#define MA_core__pa__release_ch1__shift 0x00
#define MA_core__pa__release_ch1__reset 0x12
#define MA_core__pa__release_ch1__inputonly 0
//------------------------------------------------------------------------------core__pa__threshold_ch0---
// Channel 0 limiter threshold
#define MA_core__pa__threshold_ch0__a 0x000e
#define MA_core__pa__threshold_ch0__len 8
#define MA_core__pa__threshold_ch0__mask 0xff
#define MA_core__pa__threshold_ch0__shift 0x00
#define MA_core__pa__threshold_ch0__reset 0x00
#define MA_core__pa__threshold_ch0__inputonly 0
//------------------------------------------------------------------------------core__pa__threshold_ch1---
// Channel 1 limiter threshold
#define MA_core__pa__threshold_ch1__a 0x000f
#define MA_core__pa__threshold_ch1__len 8
#define MA_core__pa__threshold_ch1__mask 0xff
#define MA_core__pa__threshold_ch1__shift 0x00
#define MA_core__pa__threshold_ch1__reset 0x00
#define MA_core__pa__threshold_ch1__inputonly 0
//------------------------------------------------------------------------------core__pa__gpio_sync_zclip---
// High to use the GPIO pin for inter IC synchronization. Low to use the GPIO pin to indicate amplifier clipping
#define MA_core__pa__gpio_sync_zclip__a 0x0005
#define MA_core__pa__gpio_sync_zclip__len 1
#define MA_core__pa__gpio_sync_zclip__mask 0x10
#define MA_core__pa__gpio_sync_zclip__shift 0x04
#define MA_core__pa__gpio_sync_zclip__reset 0x00
#define MA_core__pa__gpio_sync_zclip__inputonly 0
//------------------------------------------------------------------------------core__pa__mute_source---
// Select source for the internal mute signal; 0: nmute pin, 1: mute0/1 register settings
#define MA_core__pa__mute_source__a 0x0002
#define MA_core__pa__mute_source__len 1
#define MA_core__pa__mute_source__mask 0x20
#define MA_core__pa__mute_source__shift 0x05
#define MA_core__pa__mute_source__reset 0x00
#define MA_core__pa__mute_source__inputonly 0
//------------------------------------------------------------------------------core__pa__adc_pin---
// Value representing the level on the ADC input pin
#define MA_core__pa__adc_pin__a 0x0007
#define MA_core__pa__adc_pin__len 8
#define MA_core__pa__adc_pin__mask 0xff
#define MA_core__pa__adc_pin__shift 0x00
#define MA_core__pa__adc_pin__reset 0x00
#define MA_core__pa__adc_pin__inputonly 1
//------------------------------------------------------------------------------core__pa__dsp_flags---
// Flags set by the DSP
#define MA_core__pa__dsp_flags__a 0x0006
#define MA_core__pa__dsp_flags__len 6
#define MA_core__pa__dsp_flags__mask 0xfc
#define MA_core__pa__dsp_flags__shift 0x02
#define MA_core__pa__dsp_flags__reset 0x00
#define MA_core__pa__dsp_flags__inputonly 1
//------------------------------------------------------------------------------core__i2s_tdm__data_alignment---
// 00: I2S, 01: Left Justified, 10: Right Justified
#define MA_core__i2s_tdm__data_alignment__a 0x0010
#define MA_core__i2s_tdm__data_alignment__len 2
#define MA_core__i2s_tdm__data_alignment__mask 0x03
#define MA_core__i2s_tdm__data_alignment__shift 0x00
#define MA_core__i2s_tdm__data_alignment__reset 0x00
#define MA_core__i2s_tdm__data_alignment__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__sck_pol---
// 0: Data changes on rising edge of SCK, 1: Data changes on falling edge of SCK
#define MA_core__i2s_tdm__sck_pol__a 0x0010
#define MA_core__i2s_tdm__sck_pol__len 1
#define MA_core__i2s_tdm__sck_pol__mask 0x10
#define MA_core__i2s_tdm__sck_pol__shift 0x04
#define MA_core__i2s_tdm__sck_pol__reset 0x01
#define MA_core__i2s_tdm__sck_pol__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__slot_size---
// Channel slot size: 00: 32bit, 01: 24bit, 10: 16bit
#define MA_core__i2s_tdm__slot_size__a 0x0010
#define MA_core__i2s_tdm__slot_size__len 2
#define MA_core__i2s_tdm__slot_size__mask 0x60
#define MA_core__i2s_tdm__slot_size__shift 0x05
#define MA_core__i2s_tdm__slot_size__reset 0x00
#define MA_core__i2s_tdm__slot_size__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__ws_fs_rising---
// 0: Frame starts at falling FS, 1: Frame starts at rising FS
#define MA_core__i2s_tdm__ws_fs_rising__a 0x0010
#define MA_core__i2s_tdm__ws_fs_rising__len 1
#define MA_core__i2s_tdm__ws_fs_rising__mask 0x80
#define MA_core__i2s_tdm__ws_fs_rising__shift 0x07
#define MA_core__i2s_tdm__ws_fs_rising__reset 0x00
#define MA_core__i2s_tdm__ws_fs_rising__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__lsb_first---
// 0: The msb is transmitted first, 1: The lsb is transmitted first
#define MA_core__i2s_tdm__lsb_first__a 0x0011
#define MA_core__i2s_tdm__lsb_first__len 1
#define MA_core__i2s_tdm__lsb_first__mask 0x01
#define MA_core__i2s_tdm__lsb_first__shift 0x00
#define MA_core__i2s_tdm__lsb_first__reset 0x00
#define MA_core__i2s_tdm__lsb_first__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_input_map0---
// Recieved slot number for Ch0 input [0 to 31]
#define MA_core__i2s_tdm__tdm_input_map0__a 0x0012
#define MA_core__i2s_tdm__tdm_input_map0__len 5
#define MA_core__i2s_tdm__tdm_input_map0__mask 0x1f
#define MA_core__i2s_tdm__tdm_input_map0__shift 0x00
#define MA_core__i2s_tdm__tdm_input_map0__reset 0x00
#define MA_core__i2s_tdm__tdm_input_map0__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_input_map1---
// Recieved slot number for Ch1 input [0 to 31]
#define MA_core__i2s_tdm__tdm_input_map1__a 0x0013
#define MA_core__i2s_tdm__tdm_input_map1__len 5
#define MA_core__i2s_tdm__tdm_input_map1__mask 0x1f
#define MA_core__i2s_tdm__tdm_input_map1__shift 0x00
#define MA_core__i2s_tdm__tdm_input_map1__reset 0x01
#define MA_core__i2s_tdm__tdm_input_map1__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_input_map2---
// Reserved
#define MA_core__i2s_tdm__tdm_input_map2__a 0x0014
#define MA_core__i2s_tdm__tdm_input_map2__len 5
#define MA_core__i2s_tdm__tdm_input_map2__mask 0x1f
#define MA_core__i2s_tdm__tdm_input_map2__shift 0x00
#define MA_core__i2s_tdm__tdm_input_map2__reset 0x00
#define MA_core__i2s_tdm__tdm_input_map2__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_input_map3---
// Reserved
#define MA_core__i2s_tdm__tdm_input_map3__a 0x0015
#define MA_core__i2s_tdm__tdm_input_map3__len 5
#define MA_core__i2s_tdm__tdm_input_map3__mask 0x1f
#define MA_core__i2s_tdm__tdm_input_map3__shift 0x00
#define MA_core__i2s_tdm__tdm_input_map3__reset 0x00
#define MA_core__i2s_tdm__tdm_input_map3__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map0---
// Signal transmitted in slot0. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map0__a 0x0016
#define MA_core__i2s_tdm__tdm_output_map0__len 3
#define MA_core__i2s_tdm__tdm_output_map0__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map0__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map0__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map0__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map1---
// Signal transmitted in slot1. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map1__a 0x0016
#define MA_core__i2s_tdm__tdm_output_map1__len 3
#define MA_core__i2s_tdm__tdm_output_map1__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map1__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map1__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map1__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map2---
// Signal transmitted in slot2. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map2__a 0x0017
#define MA_core__i2s_tdm__tdm_output_map2__len 3
#define MA_core__i2s_tdm__tdm_output_map2__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map2__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map2__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map2__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map3---
// Signal transmitted in slot3. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map3__a 0x0017
#define MA_core__i2s_tdm__tdm_output_map3__len 3
#define MA_core__i2s_tdm__tdm_output_map3__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map3__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map3__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map3__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map4---
// Signal transmitted in slot4. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map4__a 0x0018
#define MA_core__i2s_tdm__tdm_output_map4__len 3
#define MA_core__i2s_tdm__tdm_output_map4__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map4__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map4__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map4__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map5---
// Signal transmitted in slot5. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map5__a 0x0018
#define MA_core__i2s_tdm__tdm_output_map5__len 3
#define MA_core__i2s_tdm__tdm_output_map5__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map5__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map5__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map5__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map6---
// Signal transmitted in slot6. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map6__a 0x0019
#define MA_core__i2s_tdm__tdm_output_map6__len 3
#define MA_core__i2s_tdm__tdm_output_map6__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map6__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map6__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map6__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map7---
// Signal transmitted in slot7. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map7__a 0x0019
#define MA_core__i2s_tdm__tdm_output_map7__len 3
#define MA_core__i2s_tdm__tdm_output_map7__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map7__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map7__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map7__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map8---
// Signal transmitted in slot8. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map8__a 0x001a
#define MA_core__i2s_tdm__tdm_output_map8__len 3
#define MA_core__i2s_tdm__tdm_output_map8__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map8__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map8__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map8__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map9---
// Signal transmitted in slot9. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map9__a 0x001a
#define MA_core__i2s_tdm__tdm_output_map9__len 3
#define MA_core__i2s_tdm__tdm_output_map9__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map9__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map9__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map9__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map10---
// Signal transmitted in slot10. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map10__a 0x001b
#define MA_core__i2s_tdm__tdm_output_map10__len 3
#define MA_core__i2s_tdm__tdm_output_map10__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map10__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map10__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map10__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map11---
// Signal transmitted in slot11. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map11__a 0x001b
#define MA_core__i2s_tdm__tdm_output_map11__len 3
#define MA_core__i2s_tdm__tdm_output_map11__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map11__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map11__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map11__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map12---
// Signal transmitted in slot12. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map12__a 0x001c
#define MA_core__i2s_tdm__tdm_output_map12__len 3
#define MA_core__i2s_tdm__tdm_output_map12__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map12__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map12__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map12__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map13---
// Signal transmitted in slot13. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map13__a 0x001c
#define MA_core__i2s_tdm__tdm_output_map13__len 3
#define MA_core__i2s_tdm__tdm_output_map13__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map13__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map13__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map13__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map14---
// Signal transmitted in slot14. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map14__a 0x001d
#define MA_core__i2s_tdm__tdm_output_map14__len 3
#define MA_core__i2s_tdm__tdm_output_map14__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map14__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map14__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map14__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map15---
// Signal transmitted in slot15. 000: Zero, 001: High-Z, 010: DSP Output Ch0, 011: DSP Output Ch1, 1XX: Reserved
#define MA_core__i2s_tdm__tdm_output_map15__a 0x001d
#define MA_core__i2s_tdm__tdm_output_map15__len 3
#define MA_core__i2s_tdm__tdm_output_map15__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map15__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map15__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map15__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map16---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map16__a 0x001e
#define MA_core__i2s_tdm__tdm_output_map16__len 3
#define MA_core__i2s_tdm__tdm_output_map16__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map16__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map16__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map16__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map17---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map17__a 0x001e
#define MA_core__i2s_tdm__tdm_output_map17__len 3
#define MA_core__i2s_tdm__tdm_output_map17__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map17__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map17__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map17__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map18---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map18__a 0x001f
#define MA_core__i2s_tdm__tdm_output_map18__len 3
#define MA_core__i2s_tdm__tdm_output_map18__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map18__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map18__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map18__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map19---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map19__a 0x001f
#define MA_core__i2s_tdm__tdm_output_map19__len 3
#define MA_core__i2s_tdm__tdm_output_map19__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map19__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map19__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map19__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map20---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map20__a 0x0020
#define MA_core__i2s_tdm__tdm_output_map20__len 3
#define MA_core__i2s_tdm__tdm_output_map20__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map20__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map20__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map20__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map21---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map21__a 0x0020
#define MA_core__i2s_tdm__tdm_output_map21__len 3
#define MA_core__i2s_tdm__tdm_output_map21__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map21__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map21__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map21__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map22---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map22__a 0x0021
#define MA_core__i2s_tdm__tdm_output_map22__len 3
#define MA_core__i2s_tdm__tdm_output_map22__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map22__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map22__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map22__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map23---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map23__a 0x0021
#define MA_core__i2s_tdm__tdm_output_map23__len 3
#define MA_core__i2s_tdm__tdm_output_map23__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map23__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map23__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map23__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map24---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map24__a 0x0022
#define MA_core__i2s_tdm__tdm_output_map24__len 3
#define MA_core__i2s_tdm__tdm_output_map24__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map24__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map24__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map24__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map25---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map25__a 0x0022
#define MA_core__i2s_tdm__tdm_output_map25__len 3
#define MA_core__i2s_tdm__tdm_output_map25__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map25__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map25__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map25__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map26---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map26__a 0x0023
#define MA_core__i2s_tdm__tdm_output_map26__len 3
#define MA_core__i2s_tdm__tdm_output_map26__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map26__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map26__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map26__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map27---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map27__a 0x0023
#define MA_core__i2s_tdm__tdm_output_map27__len 3
#define MA_core__i2s_tdm__tdm_output_map27__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map27__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map27__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map27__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map28---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map28__a 0x0024
#define MA_core__i2s_tdm__tdm_output_map28__len 3
#define MA_core__i2s_tdm__tdm_output_map28__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map28__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map28__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map28__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map29---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map29__a 0x0024
#define MA_core__i2s_tdm__tdm_output_map29__len 3
#define MA_core__i2s_tdm__tdm_output_map29__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map29__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map29__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map29__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map30---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map30__a 0x0025
#define MA_core__i2s_tdm__tdm_output_map30__len 3
#define MA_core__i2s_tdm__tdm_output_map30__mask 0x07
#define MA_core__i2s_tdm__tdm_output_map30__shift 0x00
#define MA_core__i2s_tdm__tdm_output_map30__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map30__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tdm_output_map31---
// Reserved
#define MA_core__i2s_tdm__tdm_output_map31__a 0x0025
#define MA_core__i2s_tdm__tdm_output_map31__len 3
#define MA_core__i2s_tdm__tdm_output_map31__mask 0x38
#define MA_core__i2s_tdm__tdm_output_map31__shift 0x03
#define MA_core__i2s_tdm__tdm_output_map31__reset 0x00
#define MA_core__i2s_tdm__tdm_output_map31__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tx_loopback---
// 1: Transmitted audio data is a loop-back of the received audio data
#define MA_core__i2s_tdm__tx_loopback__a 0x0026
#define MA_core__i2s_tdm__tx_loopback__len 1
#define MA_core__i2s_tdm__tx_loopback__mask 0x01
#define MA_core__i2s_tdm__tx_loopback__shift 0x00
#define MA_core__i2s_tdm__tx_loopback__reset 0x00
#define MA_core__i2s_tdm__tx_loopback__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tx_enable---
// 1: Enable the I2S/TDM data transmitter
#define MA_core__i2s_tdm__tx_enable__a 0x0026
#define MA_core__i2s_tdm__tx_enable__len 1
#define MA_core__i2s_tdm__tx_enable__mask 0x04
#define MA_core__i2s_tdm__tx_enable__shift 0x02
#define MA_core__i2s_tdm__tx_enable__reset 0x00
#define MA_core__i2s_tdm__tx_enable__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__rx_enable---
// 1: Enable the I2S/TDM receiver. (Must be enabled to play audio)
#define MA_core__i2s_tdm__rx_enable__a 0x0026
#define MA_core__i2s_tdm__rx_enable__len 1
#define MA_core__i2s_tdm__rx_enable__mask 0x02
#define MA_core__i2s_tdm__rx_enable__shift 0x01
#define MA_core__i2s_tdm__rx_enable__reset 0x01
#define MA_core__i2s_tdm__rx_enable__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__tx_strong_drive---
// 1: Enable extra drive strength on I2S/TDM transmitter data output pin
#define MA_core__i2s_tdm__tx_strong_drive__a 0x0026
#define MA_core__i2s_tdm__tx_strong_drive__len 1
#define MA_core__i2s_tdm__tx_strong_drive__mask 0x08
#define MA_core__i2s_tdm__tx_strong_drive__shift 0x03
#define MA_core__i2s_tdm__tx_strong_drive__reset 0x01
#define MA_core__i2s_tdm__tx_strong_drive__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__sync_in_enable---
// 1: Enable the amplifier PWM to synchronize to the synchronization pulse on the GPIO pin
#define MA_core__i2s_tdm__sync_in_enable__a 0x0027
#define MA_core__i2s_tdm__sync_in_enable__len 1
#define MA_core__i2s_tdm__sync_in_enable__mask 0x01
#define MA_core__i2s_tdm__sync_in_enable__shift 0x00
#define MA_core__i2s_tdm__sync_in_enable__reset 0x00
#define MA_core__i2s_tdm__sync_in_enable__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__sync_out_enable---
// 1: Enable the internal amplifier PWM synchronization signal to drive the GPIO pin (open-drain)
#define MA_core__i2s_tdm__sync_out_enable__a 0x0027
#define MA_core__i2s_tdm__sync_out_enable__len 1
#define MA_core__i2s_tdm__sync_out_enable__mask 0x02
#define MA_core__i2s_tdm__sync_out_enable__shift 0x01
#define MA_core__i2s_tdm__sync_out_enable__reset 0x00
#define MA_core__i2s_tdm__sync_out_enable__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__fast_sync---
// Select frequency of the synchronization signal on the GPIO pin; 0: fs/12288, 1: fs/12
#define MA_core__i2s_tdm__fast_sync__a 0x0027
#define MA_core__i2s_tdm__fast_sync__len 1
#define MA_core__i2s_tdm__fast_sync__mask 0x04
#define MA_core__i2s_tdm__fast_sync__shift 0x02
#define MA_core__i2s_tdm__fast_sync__reset 0x01
#define MA_core__i2s_tdm__fast_sync__inputonly 0
//------------------------------------------------------------------------------core__i2s_tdm__data_size---
// 00: 24bit, 01: 20bit, 10: 18bit, 11: 16bit
#define MA_core__i2s_tdm__data_size__a 0x0010
#define MA_core__i2s_tdm__data_size__len 2
#define MA_core__i2s_tdm__data_size__mask 0x0c
#define MA_core__i2s_tdm__data_size__shift 0x02
#define MA_core__i2s_tdm__data_size__reset 0x00
#define MA_core__i2s_tdm__data_size__inputonly 0
//------------------------------------------------------------------------------core__system__rb_protect_override---
// Register bank protection override
#define MA_core__system__rb_protect_override__a 0x0269
#define MA_core__system__rb_protect_override__len 8
#define MA_core__system__rb_protect_override__mask 0xff
#define MA_core__system__rb_protect_override__shift 0x00
#define MA_core__system__rb_protect_override__reset 0x00
#define MA_core__system__rb_protect_override__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit0---
// 120 KOhm upper limit
#define MA_mlpin__mlp__limit0__a 0x0500
#define MA_mlpin__mlp__limit0__len 6
#define MA_mlpin__mlp__limit0__mask 0x3f
#define MA_mlpin__mlp__limit0__shift 0x00
#define MA_mlpin__mlp__limit0__reset 0x01
#define MA_mlpin__mlp__limit0__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit1---
// 62 KOhm upper limit
#define MA_mlpin__mlp__limit1__a 0x0501
#define MA_mlpin__mlp__limit1__len 6
#define MA_mlpin__mlp__limit1__mask 0x3f
#define MA_mlpin__mlp__limit1__shift 0x00
#define MA_mlpin__mlp__limit1__reset 0x05
#define MA_mlpin__mlp__limit1__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit2---
// 39 KOhm upper limit
#define MA_mlpin__mlp__limit2__a 0x0502
#define MA_mlpin__mlp__limit2__len 6
#define MA_mlpin__mlp__limit2__mask 0x3f
#define MA_mlpin__mlp__limit2__shift 0x00
#define MA_mlpin__mlp__limit2__reset 0x09
#define MA_mlpin__mlp__limit2__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit3---
// 30 KOhm upper limit
#define MA_mlpin__mlp__limit3__a 0x0503
#define MA_mlpin__mlp__limit3__len 6
#define MA_mlpin__mlp__limit3__mask 0x3f
#define MA_mlpin__mlp__limit3__shift 0x00
#define MA_mlpin__mlp__limit3__reset 0x0e
#define MA_mlpin__mlp__limit3__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit4---
// 24 KOhm upper limit
#define MA_mlpin__mlp__limit4__a 0x0504
#define MA_mlpin__mlp__limit4__len 6
#define MA_mlpin__mlp__limit4__mask 0x3f
#define MA_mlpin__mlp__limit4__shift 0x00
#define MA_mlpin__mlp__limit4__reset 0x12
#define MA_mlpin__mlp__limit4__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit5---
// 20 KOhm upper limit
#define MA_mlpin__mlp__limit5__a 0x0505
#define MA_mlpin__mlp__limit5__len 6
#define MA_mlpin__mlp__limit5__mask 0x3f
#define MA_mlpin__mlp__limit5__shift 0x00
#define MA_mlpin__mlp__limit5__reset 0x16
#define MA_mlpin__mlp__limit5__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit6---
// 15 KOhm upper limit
#define MA_mlpin__mlp__limit6__a 0x0506
#define MA_mlpin__mlp__limit6__len 6
#define MA_mlpin__mlp__limit6__mask 0x3f
#define MA_mlpin__mlp__limit6__shift 0x00
#define MA_mlpin__mlp__limit6__reset 0x1c
#define MA_mlpin__mlp__limit6__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit7---
// 10 KOhm upper limit
#define MA_mlpin__mlp__limit7__a 0x0507
#define MA_mlpin__mlp__limit7__len 6
#define MA_mlpin__mlp__limit7__mask 0x3f
#define MA_mlpin__mlp__limit7__shift 0x00
#define MA_mlpin__mlp__limit7__reset 0x28
#define MA_mlpin__mlp__limit7__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__limit8---
// 10 KOhm lower limit
#define MA_mlpin__mlp__limit8__a 0x0508
#define MA_mlpin__mlp__limit8__len 6
#define MA_mlpin__mlp__limit8__mask 0x3f
#define MA_mlpin__mlp__limit8__shift 0x00
#define MA_mlpin__mlp__limit8__reset 0x36
#define MA_mlpin__mlp__limit8__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__decrement---
// Enable auto-decrement of the select register allowing you to do sequential messurements of several pins
#define MA_mlpin__mlp__decrement__a 0x0509
#define MA_mlpin__mlp__decrement__len 1
#define MA_mlpin__mlp__decrement__mask 0x08
#define MA_mlpin__mlp__decrement__shift 0x03
#define MA_mlpin__mlp__decrement__reset 0x01
#define MA_mlpin__mlp__decrement__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__sel---
// Start decode of the given pin (see coding on the config registers) or apply test mode load (sel=6)
#define MA_mlpin__mlp__sel__a 0x0509
#define MA_mlpin__mlp__sel__len 3
#define MA_mlpin__mlp__sel__mask 0x07
#define MA_mlpin__mlp__sel__shift 0x00
#define MA_mlpin__mlp__sel__reset 0x05
#define MA_mlpin__mlp__sel__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__msel_cfg---
// msel pin configuration (sel=1); 0: tie high, 1: 120 KOhm
#define MA_mlpin__mlp__msel_cfg__a 0x050c
#define MA_mlpin__mlp__msel_cfg__len 4
#define MA_mlpin__mlp__msel_cfg__mask 0x0f
#define MA_mlpin__mlp__msel_cfg__shift 0x00
#define MA_mlpin__mlp__msel_cfg__reset 0x00
#define MA_mlpin__mlp__msel_cfg__inputonly 1
//------------------------------------------------------------------------------mlpin__mlp__i2c_ad0_cfg---
// i2c_ad0 pin configuration (sel=3); 2: 62 KOhm, 3: 39 KOhm
#define MA_mlpin__mlp__i2c_ad0_cfg__a 0x050e
#define MA_mlpin__mlp__i2c_ad0_cfg__len 4
#define MA_mlpin__mlp__i2c_ad0_cfg__mask 0x0f
#define MA_mlpin__mlp__i2c_ad0_cfg__shift 0x00
#define MA_mlpin__mlp__i2c_ad0_cfg__reset 0x00
#define MA_mlpin__mlp__i2c_ad0_cfg__inputonly 1
//------------------------------------------------------------------------------mlpin__mlp__i2c_ad1_cfg---
// i2c_ad1 pin configuration (sel=2); 4: 30 KOhm, 5: 24 KOhm
#define MA_mlpin__mlp__i2c_ad1_cfg__a 0x050d
#define MA_mlpin__mlp__i2c_ad1_cfg__len 4
#define MA_mlpin__mlp__i2c_ad1_cfg__mask 0x0f
#define MA_mlpin__mlp__i2c_ad1_cfg__shift 0x00
#define MA_mlpin__mlp__i2c_ad1_cfg__reset 0x00
#define MA_mlpin__mlp__i2c_ad1_cfg__inputonly 1
//------------------------------------------------------------------------------mlpin__mlp__i2c_sda_cfg---
// i2c_sda pin configuration (sel=4); 6: 20 KOhm, 7: 15 KOhm
#define MA_mlpin__mlp__i2c_sda_cfg__a 0x050f
#define MA_mlpin__mlp__i2c_sda_cfg__len 4
#define MA_mlpin__mlp__i2c_sda_cfg__mask 0x0f
#define MA_mlpin__mlp__i2c_sda_cfg__shift 0x00
#define MA_mlpin__mlp__i2c_sda_cfg__reset 0x00
#define MA_mlpin__mlp__i2c_sda_cfg__inputonly 1
//------------------------------------------------------------------------------mlpin__mlp__i2c_scl_cfg---
// i2c_scl pin configuration (sel=5); 8: 10 KOhm, 9: tie low
#define MA_mlpin__mlp__i2c_scl_cfg__a 0x0510
#define MA_mlpin__mlp__i2c_scl_cfg__len 4
#define MA_mlpin__mlp__i2c_scl_cfg__mask 0x0f
#define MA_mlpin__mlp__i2c_scl_cfg__shift 0x00
#define MA_mlpin__mlp__i2c_scl_cfg__reset 0x00
#define MA_mlpin__mlp__i2c_scl_cfg__inputonly 1
//------------------------------------------------------------------------------mlpin__mlp__timeout---
// Number of calibration clock cycles to wait for ADC to settle
#define MA_mlpin__mlp__timeout__a 0x050a
#define MA_mlpin__mlp__timeout__len 8
#define MA_mlpin__mlp__timeout__mask 0xff
#define MA_mlpin__mlp__timeout__shift 0x00
#define MA_mlpin__mlp__timeout__reset 0x80
#define MA_mlpin__mlp__timeout__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__iset---
// Number of enabled current sources in the last messurement
#define MA_mlpin__mlp__iset__a 0x050b
#define MA_mlpin__mlp__iset__len 6
#define MA_mlpin__mlp__iset__mask 0x3f
#define MA_mlpin__mlp__iset__shift 0x00
#define MA_mlpin__mlp__iset__reset 0x00
#define MA_mlpin__mlp__iset__inputonly 0
//------------------------------------------------------------------------------mlpin__mlp__sar_disable---
// Test mode where SAR is disabled and the current sources are enabled directly from the iset register
#define MA_mlpin__mlp__sar_disable__a 0x0509
#define MA_mlpin__mlp__sar_disable__len 1
#define MA_mlpin__mlp__sar_disable__mask 0x10
#define MA_mlpin__mlp__sar_disable__shift 0x04
#define MA_mlpin__mlp__sar_disable__reset 0x00
#define MA_mlpin__mlp__sar_disable__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__osc_3m_ctrim---
// 3MHz RC oscillator coarse trim
#define MA_acfg__avdd__osc_3m_ctrim__a 0x0608
#define MA_acfg__avdd__osc_3m_ctrim__len 6
#define MA_acfg__avdd__osc_3m_ctrim__mask 0x3f
#define MA_acfg__avdd__osc_3m_ctrim__shift 0x00
#define MA_acfg__avdd__osc_3m_ctrim__reset 0x00
#define MA_acfg__avdd__osc_3m_ctrim__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__osc_3m_ftrim---
// 3MHz RC oscillator fine trim
#define MA_acfg__avdd__osc_3m_ftrim__a 0x0609
#define MA_acfg__avdd__osc_3m_ftrim__len 6
#define MA_acfg__avdd__osc_3m_ftrim__mask 0x3f
#define MA_acfg__avdd__osc_3m_ftrim__shift 0x00
#define MA_acfg__avdd__osc_3m_ftrim__reset 0x00
#define MA_acfg__avdd__osc_3m_ftrim__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__test_mode---
// Unused/spare (see atest_mode in nb_trim segment)
#define MA_acfg__avdd__test_mode__a 0x0608
#define MA_acfg__avdd__test_mode__len 1
#define MA_acfg__avdd__test_mode__mask 0x40
#define MA_acfg__avdd__test_mode__shift 0x06
#define MA_acfg__avdd__test_mode__reset 0x00
#define MA_acfg__avdd__test_mode__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__spare_bits_2---
// 
#define MA_acfg__avdd__spare_bits_2__a 0x0608
#define MA_acfg__avdd__spare_bits_2__len 1
#define MA_acfg__avdd__spare_bits_2__mask 0x80
#define MA_acfg__avdd__spare_bits_2__shift 0x07
#define MA_acfg__avdd__spare_bits_2__reset 0x00
#define MA_acfg__avdd__spare_bits_2__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__dvbe_seq_cfg---
// Width of dVbe sampling pulse in 64 KHz cycles; 0: 5 (default), 1: 1, 2: 3, 3: 7
#define MA_acfg__avdd__dvbe_seq_cfg__a 0x0609
#define MA_acfg__avdd__dvbe_seq_cfg__len 2
#define MA_acfg__avdd__dvbe_seq_cfg__mask 0xc0
#define MA_acfg__avdd__dvbe_seq_cfg__shift 0x06
#define MA_acfg__avdd__dvbe_seq_cfg__reset 0x00
#define MA_acfg__avdd__dvbe_seq_cfg__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__rxtrim---
// Bandgap reference V-to-I converter resistor trim (try 152)
#define MA_acfg__avdd__rxtrim__a 0x060a
#define MA_acfg__avdd__rxtrim__len 8
#define MA_acfg__avdd__rxtrim__mask 0xff
#define MA_acfg__avdd__rxtrim__shift 0x00
#define MA_acfg__avdd__rxtrim__reset 0x00
#define MA_acfg__avdd__rxtrim__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__amux_ch0---
// Amux ch0
#define MA_acfg__avdd__amux_ch0__a 0x060b
#define MA_acfg__avdd__amux_ch0__len 4
#define MA_acfg__avdd__amux_ch0__mask 0x0f
#define MA_acfg__avdd__amux_ch0__shift 0x00
#define MA_acfg__avdd__amux_ch0__reset 0x00
#define MA_acfg__avdd__amux_ch0__inputonly 0
//------------------------------------------------------------------------------acfg__avdd__hw_id---
// Hardware id
#define MA_acfg__avdd__hw_id__a 0x060c
#define MA_acfg__avdd__hw_id__len 8
#define MA_acfg__avdd__hw_id__mask 0xff
#define MA_acfg__avdd__hw_id__shift 0x00
#define MA_acfg__avdd__hw_id__reset 0x15
#define MA_acfg__avdd__hw_id__inputonly 1
//------------------------------------------------------------------------------acfg__avdd__amux_ch1---
// Amux ch1
#define MA_acfg__avdd__amux_ch1__a 0x060b
#define MA_acfg__avdd__amux_ch1__len 4
#define MA_acfg__avdd__amux_ch1__mask 0xf0
#define MA_acfg__avdd__amux_ch1__shift 0x04
#define MA_acfg__avdd__amux_ch1__reset 0x00
#define MA_acfg__avdd__amux_ch1__inputonly 0
//------------------------------------------------------------------------------acfg__avddl__vcf_trim---
// Flying capacitor UVP/OVP resistor trim
#define MA_acfg__avddl__vcf_trim__a 0x0601
#define MA_acfg__avddl__vcf_trim__len 4
#define MA_acfg__avddl__vcf_trim__mask 0x0f
#define MA_acfg__avddl__vcf_trim__shift 0x00
#define MA_acfg__avddl__vcf_trim__reset 0x00
#define MA_acfg__avddl__vcf_trim__inputonly 0
//------------------------------------------------------------------------------acfg__avddl__spare_bits2---
// 
#define MA_acfg__avddl__spare_bits2__a 0x0601
#define MA_acfg__avddl__spare_bits2__len 4
#define MA_acfg__avddl__spare_bits2__mask 0xf0
#define MA_acfg__avddl__spare_bits2__shift 0x04
#define MA_acfg__avddl__spare_bits2__reset 0x00
#define MA_acfg__avddl__spare_bits2__inputonly 0
//------------------------------------------------------------------------------acfg__avddl__cf_trim---
// Bandgap reference feedback capacitor trim
#define MA_acfg__avddl__cf_trim__a 0x0600
#define MA_acfg__avddl__cf_trim__len 4
#define MA_acfg__avddl__cf_trim__mask 0x0f
#define MA_acfg__avddl__cf_trim__shift 0x00
#define MA_acfg__avddl__cf_trim__reset 0x00
#define MA_acfg__avddl__cf_trim__inputonly 0
//------------------------------------------------------------------------------acfg__avddl__spare_bits3---
// 
#define MA_acfg__avddl__spare_bits3__a 0x0600
#define MA_acfg__avddl__spare_bits3__len 4
#define MA_acfg__avddl__spare_bits3__mask 0xf0
#define MA_acfg__avddl__spare_bits3__shift 0x04
#define MA_acfg__avddl__spare_bits3__reset 0x00
#define MA_acfg__avddl__spare_bits3__inputonly 0
//------------------------------------------------------------------------------dsp__pmem__addr0_0---
// Program memory address 0 least significant byte
#define MA_dsp__pmem__addr0_0__a 0x1000
#define MA_dsp__pmem__addr0_0__len 8
#define MA_dsp__pmem__addr0_0__mask 0xff
#define MA_dsp__pmem__addr0_0__shift 0x00
#define MA_dsp__pmem__addr0_0__reset 0x00
#define MA_dsp__pmem__addr0_0__inputonly 0
//------------------------------------------------------------------------------dsp__pmem__addr0_1---
// Program memory address 0 middle byte
#define MA_dsp__pmem__addr0_1__a 0x1001
#define MA_dsp__pmem__addr0_1__len 8
#define MA_dsp__pmem__addr0_1__mask 0xff
#define MA_dsp__pmem__addr0_1__shift 0x00
#define MA_dsp__pmem__addr0_1__reset 0x00
#define MA_dsp__pmem__addr0_1__inputonly 0
//------------------------------------------------------------------------------dsp__pmem__addr0_2---
// Program memory address 0 most signficant  byte (writing commits to hardblock memory)
#define MA_dsp__pmem__addr0_2__a 0x1002
#define MA_dsp__pmem__addr0_2__len 8
#define MA_dsp__pmem__addr0_2__mask 0xff
#define MA_dsp__pmem__addr0_2__shift 0x00
#define MA_dsp__pmem__addr0_2__reset 0x00
#define MA_dsp__pmem__addr0_2__inputonly 0
//------------------------------------------------------------------------------dsp__pmem__addr1_0---
// Program memory address 1 least significant byte
#define MA_dsp__pmem__addr1_0__a 0x1004
#define MA_dsp__pmem__addr1_0__len 8
#define MA_dsp__pmem__addr1_0__mask 0xff
#define MA_dsp__pmem__addr1_0__shift 0x00
#define MA_dsp__pmem__addr1_0__reset 0x00
#define MA_dsp__pmem__addr1_0__inputonly 0
//------------------------------------------------------------------------------dsp__pmem__addr1_1---
// Program memory address 1 middle byte
#define MA_dsp__pmem__addr1_1__a 0x1005
#define MA_dsp__pmem__addr1_1__len 8
#define MA_dsp__pmem__addr1_1__mask 0xff
#define MA_dsp__pmem__addr1_1__shift 0x00
#define MA_dsp__pmem__addr1_1__reset 0x00
#define MA_dsp__pmem__addr1_1__inputonly 0
//------------------------------------------------------------------------------dsp__pmem__addr1_2---
// Program memory address 1 most signficant  byte (writing commits to hardblock memory)
#define MA_dsp__pmem__addr1_2__a 0x1006
#define MA_dsp__pmem__addr1_2__len 8
#define MA_dsp__pmem__addr1_2__mask 0xff
#define MA_dsp__pmem__addr1_2__shift 0x00
#define MA_dsp__pmem__addr1_2__reset 0x00
#define MA_dsp__pmem__addr1_2__inputonly 0
//------------------------------------------------------------------------------otp__otpmem__byte_0---
// OTP memory byte
#define MA_otp__otpmem__byte_0__a 0x8000
#define MA_otp__otpmem__byte_0__len 8
#define MA_otp__otpmem__byte_0__mask 0xff
#define MA_otp__otpmem__byte_0__shift 0x00
#define MA_otp__otpmem__byte_0__reset 0xff
#define MA_otp__otpmem__byte_0__inputonly 0
//------------------------------------------------------------------------------otp__otpmem__byte_1---
// OTP memory byte
#define MA_otp__otpmem__byte_1__a 0x8001
#define MA_otp__otpmem__byte_1__len 8
#define MA_otp__otpmem__byte_1__mask 0xff
#define MA_otp__otpmem__byte_1__shift 0x00
#define MA_otp__otpmem__byte_1__reset 0xff
#define MA_otp__otpmem__byte_1__inputonly 0
//------------------------------------------------------------------------------otp__otpmem__byte_2---
// OTP memory byte
#define MA_otp__otpmem__byte_2__a 0x8002
#define MA_otp__otpmem__byte_2__len 8
#define MA_otp__otpmem__byte_2__mask 0xff
#define MA_otp__otpmem__byte_2__shift 0x00
#define MA_otp__otpmem__byte_2__reset 0xff
#define MA_otp__otpmem__byte_2__inputonly 0
//------------------------------------------------------------------------------otp__otpmem__byte_3---
// OTP memory byte
#define MA_otp__otpmem__byte_3__a 0x8003
#define MA_otp__otpmem__byte_3__len 8
#define MA_otp__otpmem__byte_3__mask 0xff
#define MA_otp__otpmem__byte_3__shift 0x00
#define MA_otp__otpmem__byte_3__reset 0xff
#define MA_otp__otpmem__byte_3__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__device_id__3---
// Device ID [31:24]
#define MA_otp__otptrack__device_id__3__a 0x81f1
#define MA_otp__otptrack__device_id__3__len 8
#define MA_otp__otptrack__device_id__3__mask 0xff
#define MA_otp__otptrack__device_id__3__shift 0x00
#define MA_otp__otptrack__device_id__3__reset 0xff
#define MA_otp__otptrack__device_id__3__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__device_id__2---
// Device ID [23:16]
#define MA_otp__otptrack__device_id__2__a 0x81f2
#define MA_otp__otptrack__device_id__2__len 8
#define MA_otp__otptrack__device_id__2__mask 0xff
#define MA_otp__otptrack__device_id__2__shift 0x00
#define MA_otp__otptrack__device_id__2__reset 0xff
#define MA_otp__otptrack__device_id__2__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__ate_site---
// 0-23: Wafernumber, 25: Meruslab, 26: Salland preproduction, 27: ASE, 31:untested
#define MA_otp__otptrack__ate_site__a 0x81f5
#define MA_otp__otptrack__ate_site__len 2
#define MA_otp__otptrack__ate_site__mask 0xc0
#define MA_otp__otptrack__ate_site__shift 0x06
#define MA_otp__otptrack__ate_site__reset 0x03
#define MA_otp__otptrack__ate_site__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__ate_version_minor---
// ATE program version, minor
#define MA_otp__otptrack__ate_version_minor__a 0x81f5
#define MA_otp__otptrack__ate_version_minor__len 6
#define MA_otp__otptrack__ate_version_minor__mask 0x3f
#define MA_otp__otptrack__ate_version_minor__shift 0x00
#define MA_otp__otptrack__ate_version_minor__reset 0x3f
#define MA_otp__otptrack__ate_version_minor__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__device_id__1---
// Device ID [15:8]
#define MA_otp__otptrack__device_id__1__a 0x81f3
#define MA_otp__otptrack__device_id__1__len 8
#define MA_otp__otptrack__device_id__1__mask 0xff
#define MA_otp__otptrack__device_id__1__shift 0x00
#define MA_otp__otptrack__device_id__1__reset 0xff
#define MA_otp__otptrack__device_id__1__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__device_id__0---
// Device ID [7:0]
#define MA_otp__otptrack__device_id__0__a 0x81f4
#define MA_otp__otptrack__device_id__0__len 8
#define MA_otp__otptrack__device_id__0__mask 0xff
#define MA_otp__otptrack__device_id__0__shift 0x00
#define MA_otp__otptrack__device_id__0__reset 0xff
#define MA_otp__otptrack__device_id__0__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__test_result---
// Test result; msb:tested,bit2:afirbist,bit1:dspmembist,bit0:vdd_reg
#define MA_otp__otptrack__test_result__a 0x81f7
#define MA_otp__otptrack__test_result__len 8
#define MA_otp__otptrack__test_result__mask 0xff
#define MA_otp__otptrack__test_result__shift 0x00
#define MA_otp__otptrack__test_result__reset 0xff
#define MA_otp__otptrack__test_result__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__ate_version_major---
// ATE program version, major
#define MA_otp__otptrack__ate_version_major__a 0x81f0
#define MA_otp__otptrack__ate_version_major__len 8
#define MA_otp__otptrack__ate_version_major__mask 0xff
#define MA_otp__otptrack__ate_version_major__shift 0x00
#define MA_otp__otptrack__ate_version_major__reset 0xff
#define MA_otp__otptrack__ate_version_major__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__otp_version_minor---
// OTP layout version, minor
#define MA_otp__otptrack__otp_version_minor__a 0x81f6
#define MA_otp__otptrack__otp_version_minor__len 4
#define MA_otp__otptrack__otp_version_minor__mask 0x0f
#define MA_otp__otptrack__otp_version_minor__shift 0x00
#define MA_otp__otptrack__otp_version_minor__reset 0x0f
#define MA_otp__otptrack__otp_version_minor__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__otp_version_major---
// OTP layout version, major
#define MA_otp__otptrack__otp_version_major__a 0x81f6
#define MA_otp__otptrack__otp_version_major__len 4
#define MA_otp__otptrack__otp_version_major__mask 0xf0
#define MA_otp__otptrack__otp_version_major__shift 0x04
#define MA_otp__otptrack__otp_version_major__reset 0x0f
#define MA_otp__otptrack__otp_version_major__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__wafer_x_pos---
// Wafer position, X
#define MA_otp__otptrack__wafer_x_pos__a 0x81f8
#define MA_otp__otptrack__wafer_x_pos__len 8
#define MA_otp__otptrack__wafer_x_pos__mask 0xff
#define MA_otp__otptrack__wafer_x_pos__shift 0x00
#define MA_otp__otptrack__wafer_x_pos__reset 0xff
#define MA_otp__otptrack__wafer_x_pos__inputonly 0
//------------------------------------------------------------------------------otp__otptrack__wafer_y_pos---
// Wafer position, Y
#define MA_otp__otptrack__wafer_y_pos__a 0x81f9
#define MA_otp__otptrack__wafer_y_pos__len 8
#define MA_otp__otptrack__wafer_y_pos__mask 0xff
#define MA_otp__otptrack__wafer_y_pos__shift 0x00
#define MA_otp__otptrack__wafer_y_pos__reset 0xff
#define MA_otp__otptrack__wafer_y_pos__inputonly 0
/* db_version 2 entries*/
// Define reset value for core and mlpin segment 
#ifndef DISABLE_RESET_VALUES
int MA120_reset[0x600] = { 0x32,0x03,0x00,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x12,0x00,0x00, // 0x0000 to 0x000f 
                           0x10,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0010 to 0x001f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0020 to 0x002f 
                           0x3f,0x53,0x07,0x37,0x90,0x07,0x37,0xd0,0x04,0x26,0xd0,0x07,0x7e,0x53,0x07,0x76, // 0x0030 to 0x003f 
                           0x98,0x07,0x75,0xd0,0x07,0x65,0xd0,0x07,0xfd,0x53,0x07,0xf5,0x98,0x07,0xf5,0xd0, // 0x0040 to 0x004f 
                           0x07,0x76,0x53,0x07,0x76,0x53,0x07,0x76,0x90,0x07,0x76,0xd0,0x07,0x65,0xd0,0x07, // 0x0050 to 0x005f 
                           0x16,0xd0,0x07,0x55,0xd0,0x07,0x55,0xd0,0x07,0x55,0xd0,0x07,0x00,0x21,0x70,0xbc, // 0x0060 to 0x006f 
                           0x0d,0x00,0x31,0x70,0xbc,0x0d,0x44,0x65,0x75,0xb4,0x08,0x44,0x75,0x75,0xac,0x08, // 0x0070 to 0x007f 
                           0x88,0xa9,0x76,0xbc,0x00,0x88,0x79,0x76,0xbc,0x00,0x23,0x01,0xff,0x77,0x13,0x00, // 0x0080 to 0x008f 
                           0x00,0x00,0x00,0x04,0x23,0x2d,0x37,0x45,0x46,0x11,0x40,0x40,0x20,0x40,0x40,0x00, // 0x0090 to 0x009f 
                           0x12,0x04,0x0a,0x0f,0x44,0x65,0x75,0x9a,0x00,0x44,0x65,0x75,0x9a,0x00,0x00,0x00, // 0x00a0 to 0x00af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00b0 to 0x00bf 
                           0x76,0x20,0x08,0x07,0xe5,0xaf,0xa5,0x05,0x03,0x40,0x08,0xac,0x08,0x28,0x05,0x10, // 0x00c0 to 0x00cf 
                           0x20,0x0a,0xd4,0x10,0x00,0x00,0x85,0x40,0x00,0x00,0x0a,0x00,0x00,0x00,0x00,0x40, // 0x00d0 to 0x00df 
                           0x00,0x00,0x40,0x00,0x00,0x00,0x01,0x00,0x00,0x10,0x02,0x00,0x20,0x00,0x00,0x10, // 0x00e0 to 0x00ef 
                           0x00,0x10,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00f0 to 0x00ff 
                           0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x0f,0x77,0x00,0x14,0x00, // 0x0100 to 0x010f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0110 to 0x011f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0120 to 0x012f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0130 to 0x013f 
                           0xb8,0x02,0x43,0x12,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00, // 0x0140 to 0x014f 
                           0x04,0x00,0x00,0x00,0x00,0x20,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0150 to 0x015f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0160 to 0x016f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0170 to 0x017f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,0x1f,0x00,0x10, // 0x0180 to 0x018f 
                           0x00,0x00,0x00,0x00,0x24,0x64,0x01,0x47,0xc2,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0190 to 0x019f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01a0 to 0x01af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01b0 to 0x01bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01c0 to 0x01cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01d0 to 0x01df 
                           0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x07,0x11,0xff,0x4b, // 0x01e0 to 0x01ef 
                           0x42,0x06,0x00,0x00,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01f0 to 0x01ff 
                           0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0200 to 0x020f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0210 to 0x021f 
                           0x0f,0x10,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0220 to 0x022f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0230 to 0x023f 
                           0x00,0x03,0x00,0x0f,0x00,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0240 to 0x024f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0250 to 0x025f 
                           0x00,0x01,0x00,0x00,0x00,0x14,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0260 to 0x026f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0270 to 0x027f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0280 to 0x028f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0290 to 0x029f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02a0 to 0x02af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02b0 to 0x02bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02c0 to 0x02cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02d0 to 0x02df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02e0 to 0x02ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02f0 to 0x02ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0300 to 0x030f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0310 to 0x031f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0320 to 0x032f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0330 to 0x033f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0340 to 0x034f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0350 to 0x035f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0360 to 0x036f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0370 to 0x037f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0380 to 0x038f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0390 to 0x039f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03a0 to 0x03af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03b0 to 0x03bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03c0 to 0x03cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03d0 to 0x03df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03e0 to 0x03ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03f0 to 0x03ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0400 to 0x040f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0410 to 0x041f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0420 to 0x042f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0430 to 0x043f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0440 to 0x044f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0450 to 0x045f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0460 to 0x046f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0470 to 0x047f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0480 to 0x048f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0490 to 0x049f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04a0 to 0x04af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04b0 to 0x04bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04c0 to 0x04cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04d0 to 0x04df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04e0 to 0x04ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04f0 to 0x04ff 
                           0x01,0x05,0x09,0x0e,0x12,0x16,0x1c,0x28,0x36,0x0d,0x80,0x00,0x00,0x00,0x00,0x00, // 0x0500 to 0x050f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0510 to 0x051f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0520 to 0x052f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0530 to 0x053f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0540 to 0x054f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0550 to 0x055f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0560 to 0x056f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0570 to 0x057f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0580 to 0x058f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0590 to 0x059f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05a0 to 0x05af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05b0 to 0x05bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05c0 to 0x05cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05d0 to 0x05df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05e0 to 0x05ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }; // 0x05f0 to 0x05ff 
int MA120_mapped[0x600] = { 0x7f,0x03,0x3f,0xff,0xff,0x1f,0xff,0xff,0xff,0xff,0x1f,0x1f,0x1f,0x1f,0xff,0xff, // 0x0000 to 0x000f 
                           0xff,0x01,0x1f,0x1f,0x1f,0x1f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f, // 0x0010 to 0x001f 
                           0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x0f,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0020 to 0x002f 
                           0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff, // 0x0030 to 0x003f 
                           0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff, // 0x0040 to 0x004f 
                           0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f, // 0x0050 to 0x005f 
                           0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0x7f,0xff,0xff,0xff,0xff, // 0x0060 to 0x006f 
                           0x0f,0xff,0xff,0xff,0xff,0x0f,0xff,0xff,0xff,0xff,0x0f,0xff,0xff,0xff,0xff,0x0f, // 0x0070 to 0x007f 
                           0xff,0xff,0xff,0xff,0x0f,0xff,0xff,0xff,0xff,0x0f,0xff,0xff,0xff,0xff,0xff,0x1f, // 0x0080 to 0x008f 
                           0x1f,0x1f,0x1f,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, // 0x0090 to 0x009f 
                           0x3f,0x1f,0x1f,0x7f,0xff,0xff,0xff,0xff,0x0f,0xff,0xff,0xff,0xff,0x0f,0xff,0x00, // 0x00a0 to 0x00af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x3f,0xff,0xff, // 0x00b0 to 0x00bf 
                           0xff,0xff,0x0f,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, // 0x00c0 to 0x00cf 
                           0xff,0xff,0xff,0xff,0xff,0x3f,0xff,0xff,0xff,0x3f,0xff,0xff,0xff,0x3f,0xff,0xff, // 0x00d0 to 0x00df 
                           0xff,0x3f,0xff,0xff,0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f, // 0x00e0 to 0x00ef 
                           0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f, // 0x00f0 to 0x00ff 
                           0xff,0x3f,0xff,0x3f,0x03,0x1f,0x1f,0xff,0x7f,0x01,0x1f,0x1f,0xff,0x7f,0xff,0x0f, // 0x0100 to 0x010f 
                           0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x1f,0xff,0x7f,0x1f,0x1f,0xff,0x7f, // 0x0110 to 0x011f 
                           0x1f,0x1f,0xff,0x7f,0x1f,0x1f,0xff,0x7f,0x07,0xff,0xff,0xff,0xff,0xff,0xff,0x00, // 0x0120 to 0x012f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0130 to 0x013f 
                           0xff,0x07,0xff,0x7f,0xff,0x0f,0xff,0xff,0x0f,0xff,0xff,0x0f,0xff,0xff,0x0f,0xff, // 0x0140 to 0x014f 
                           0xff,0xff,0x7f,0x7f,0xff,0xff,0x3f,0xff,0xff,0xff,0xff,0xff,0x7f,0xff,0xff,0x0f, // 0x0150 to 0x015f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0160 to 0x016f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0170 to 0x017f 
                           0x7f,0x3f,0xff,0x3f,0x1f,0xff,0x1f,0x1f,0x1f,0x7f,0x1f,0xff,0x3f,0x1f,0x1f,0x3f, // 0x0180 to 0x018f 
                           0x1f,0x07,0x1f,0x0f,0x3f,0x7f,0x0f,0x7f,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0190 to 0x019f 
                           0xff,0x01,0xff,0x07,0x0f,0x1f,0x3f,0xff,0x7f,0x0f,0x0f,0x3f,0xff,0x03,0xff,0xff, // 0x01a0 to 0x01af 
                           0xff,0xff,0x01,0x1f,0x3f,0xff,0x3f,0xff,0x3f,0xff,0x3f,0x3f,0x3f,0x00,0x00,0x00, // 0x01b0 to 0x01bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01c0 to 0x01cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01d0 to 0x01df 
                           0x3f,0xff,0x1f,0xff,0x07,0x3f,0xff,0x3f,0xff,0x0f,0x3f,0xff,0x0f,0xff,0x03,0xff, // 0x01e0 to 0x01ef 
                           0xff,0x0f,0xff,0x03,0xff,0xff,0x0f,0xff,0x03,0xff,0xff,0x0f,0xff,0x03,0xff,0xff, // 0x01f0 to 0x01ff 
                           0xff,0x3f,0x3f,0xff,0xff,0xff,0xff,0x3f,0xff,0xff,0x0f,0xff,0x0f,0xff,0x0f,0xff, // 0x0200 to 0x020f 
                           0x0f,0xff,0x0f,0xff,0x0f,0xff,0x0f,0xff,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0210 to 0x021f 
                           0x1f,0xff,0xff,0xff,0xff,0x03,0xfc,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x03, // 0x0220 to 0x022f 
                           0xff,0x03,0x1f,0x1f,0xff,0x03,0xff,0x03,0xff,0xf7,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0230 to 0x023f 
                           0x07,0x03,0x0f,0x0f,0x0f,0x0f,0x3f,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0240 to 0x024f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0250 to 0x025f 
                           0x01,0x03,0xfd,0x00,0x00,0xff,0xff,0xff,0x07,0xff,0x0f,0x07,0x0f,0x3f,0x3f,0x0f, // 0x0260 to 0x026f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0270 to 0x027f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0280 to 0x028f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0290 to 0x029f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02a0 to 0x02af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02b0 to 0x02bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02c0 to 0x02cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02d0 to 0x02df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02e0 to 0x02ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02f0 to 0x02ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0300 to 0x030f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0310 to 0x031f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0320 to 0x032f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0330 to 0x033f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0340 to 0x034f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0350 to 0x035f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0360 to 0x036f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0370 to 0x037f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0380 to 0x038f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0390 to 0x039f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03a0 to 0x03af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03b0 to 0x03bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03c0 to 0x03cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03d0 to 0x03df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03e0 to 0x03ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03f0 to 0x03ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0400 to 0x040f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0410 to 0x041f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0420 to 0x042f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0430 to 0x043f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0440 to 0x044f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0450 to 0x045f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0460 to 0x046f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0470 to 0x047f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0480 to 0x048f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0490 to 0x049f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04a0 to 0x04af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04b0 to 0x04bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04c0 to 0x04cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04d0 to 0x04df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04e0 to 0x04ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04f0 to 0x04ff 
                           0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x1f,0xff,0x3f,0x0f,0x0f,0x0f,0x0f, // 0x0500 to 0x050f 
                           0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0510 to 0x051f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0520 to 0x052f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0530 to 0x053f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0540 to 0x054f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0550 to 0x055f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0560 to 0x056f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0570 to 0x057f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0580 to 0x058f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0590 to 0x059f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05a0 to 0x05af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05b0 to 0x05bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05c0 to 0x05cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05d0 to 0x05df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05e0 to 0x05ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }; // 0x05f0 to 0x05ff 
int MA120_volatile[0x600] = { 0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0000 to 0x000f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0010 to 0x001f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0020 to 0x002f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0030 to 0x003f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0040 to 0x004f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0050 to 0x005f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0060 to 0x006f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0070 to 0x007f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0080 to 0x008f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0090 to 0x009f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00a0 to 0x00af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x01,0x01, // 0x00b0 to 0x00bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00c0 to 0x00cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00d0 to 0x00df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00e0 to 0x00ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00f0 to 0x00ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0100 to 0x010f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01, // 0x0110 to 0x011f 
                           0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x03,0x01,0x01,0x01,0x01,0x02,0x02,0x00, // 0x0120 to 0x012f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0130 to 0x013f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0140 to 0x014f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x01, // 0x0150 to 0x015f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0160 to 0x016f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0170 to 0x017f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0180 to 0x018f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0190 to 0x019f 
                           0x08,0x01,0x03,0x02,0x01,0x01,0x06,0x08,0x07,0x04,0x04,0x06,0x01,0x01,0x01,0x01, // 0x01a0 to 0x01af 
                           0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00, // 0x01b0 to 0x01bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01c0 to 0x01cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01d0 to 0x01df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01e0 to 0x01ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x01f0 to 0x01ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01, // 0x0200 to 0x020f 
                           0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0210 to 0x021f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x01,0x01,0x01,0x01, // 0x0220 to 0x022f 
                           0x01,0x01,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x04,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0230 to 0x023f 
                           0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0240 to 0x024f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0250 to 0x025f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01, // 0x0260 to 0x026f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0270 to 0x027f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0280 to 0x028f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0290 to 0x029f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02a0 to 0x02af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02b0 to 0x02bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02c0 to 0x02cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02d0 to 0x02df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02e0 to 0x02ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x02f0 to 0x02ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0300 to 0x030f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0310 to 0x031f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0320 to 0x032f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0330 to 0x033f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0340 to 0x034f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0350 to 0x035f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0360 to 0x036f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0370 to 0x037f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0380 to 0x038f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0390 to 0x039f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03a0 to 0x03af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03b0 to 0x03bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03c0 to 0x03cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03d0 to 0x03df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03e0 to 0x03ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x03f0 to 0x03ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0400 to 0x040f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0410 to 0x041f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0420 to 0x042f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0430 to 0x043f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0440 to 0x044f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0450 to 0x045f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0460 to 0x046f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0470 to 0x047f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0480 to 0x048f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0490 to 0x049f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04a0 to 0x04af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04b0 to 0x04bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04c0 to 0x04cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04d0 to 0x04df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04e0 to 0x04ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x04f0 to 0x04ff 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01, // 0x0500 to 0x050f 
                           0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0510 to 0x051f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0520 to 0x052f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0530 to 0x053f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0540 to 0x054f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0550 to 0x055f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0560 to 0x056f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0570 to 0x057f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0580 to 0x058f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x0590 to 0x059f 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05a0 to 0x05af 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05b0 to 0x05bf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05c0 to 0x05cf 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05d0 to 0x05df 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x05e0 to 0x05ef 
                           0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }; // 0x05f0 to 0x05ff 
#endif  /* DISABLE_RESET_VALUES */

#endif   /* _MA120_H_*/
